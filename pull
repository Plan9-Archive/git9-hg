#!/bin/rc

rfork en

nl='
'

fn update{
	branch=$1
	url=$2
	dir=$3
	
	{git/fetch -b $1 $2 >[2=3] | awk '
		/^remote/{
			if($2=="HEAD")
				next

			gsub("^refs/heads", "refs/remotes/'$remote'", $2)
			outfile = ".git/" $2
			system("mkdir -p `{basename -d "outfile"}")
			print $3 > outfile
			close(outfile)
		}
	'} |[3] tr '\x0d' '\x0a'
}

fn usage{
	echo 'usage: $argv0 [-a] [-u upstream] [-b branch]' >[1=2]
	echo '	-u up:	pull from upstream "up" (default: origin)' >[1=2]
	echo '	-f:	fetch without updating working copy' >[1=2]
	exit usage
}

upstream=origin
while(~ $1 -*){
	switch($1){
	case -u; upstream=$1
	case -f; fetch=true
	case *; usage
	}
	shift
}
if(! cd `{git/conf -r})
	exit 'not in git repository'

if(! test -e /mnt/git/ctl)
	git/fs

url=`{git/conf 'remote "'$upstream'".url'}
branch=`{awk '$1=="branch"{print $2}' < /mnt/git/ctl}
dir=/mnt/git/branch/$branch/tree
if(! git/walk -q){
	echo $status
	echo 'repository is dirty: commit before pulling' >[1=2]
	exit 'dirty'
}
update $upstream $url $dir
if(~ $fetch ''){
	rm -f `$nl{git/walk -cfT}
	@{builtin cd /mnt/git/HEAD/tree && tar cif /fd/1 .} | @{tar xf /fd/0}
}
