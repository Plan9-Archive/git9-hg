#!/bin/rc

rfork en

nl='
'

if(! cd `{git/conf -r})
	exit 'not in git repository'

git/fs
fn usage {
	echo 'usage: git/push [-a] [-u upstream] [-b branch] [-r rmbranch]' >[1=2]
	echo '	-a:		push all' >[1=2]
	echo '	-u upstream:	push to repo "upstream" (default: origin)' >[1=2]
	echo '	-b branch:	push branch "branch" (default: current branch)' >[1=2]
	exit usage
}

remote=()
sendall=''
remove=()
upstream='origin'
branch=`{awk '$1=="branch"{print $2}' < /mnt/git/ctl}
while(~ $1 -* && ! ~ $1 --){
	switch($1){
	case -u;
		shift
		upstream=$1
	case -a;
		sendall=true
	case -b;
		shift
		branch=$1
	case -r;
		shift
		remove=(-r$1 $remove);
	case *; usage
	}
	shift
}

if(! ~ $#* 0)
	usage
if(~ $#remote 0)
	remote=`{git/conf 'remote "'$upstream'".url'}
if(~ $#remote 0)
	remote=$upstream
if(~ $#remote 0){
	echo 'no idea where to push'
	exit upstream
}
if(~ $sendall '')
	updates=`$nl{git/send -b $branch  $remove $remote}
if not
	updates=`$nl{git/send  $remove -a $remote}
if(! ~ $status '')
	exit $status

for(ln in $updates){
	u=`{echo $ln}
	refpath=`{echo $u(2) | sed 's@^refs/heads/@.git/refs/remotes/@g'}
	switch($u(1)){
	case update;
		echo $u(4) > $refpath
		echo $u(2)^':' $u(3) '=>' $u(4)
	case delete;
		echo $u(2)^': removed'
		rm -f $refpath
	case uptodate;
		echo $u(2)^': up to date'
	}
}
